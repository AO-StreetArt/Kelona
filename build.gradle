buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'java'
	id 'net.ltgt.errorprone' version '0.0.11'
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'checkstyle'

group = 'com.ao'
version = '0.0.1'
sourceCompatibility = 1.8

checkstyle {
	toolVersion = "8.2"
}

jar {
	baseName = 'kelona'
	version =  '0.0.1'
}

repositories {
	mavenCentral()
}

ext {
	springBootAdminVersion = '2.0.2'
	springCloudVersion = 'Finchley.SR1'
}

configurations {
	all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('de.codecentric:spring-boot-admin-starter-server')
	compile('org.springframework.cloud:spring-cloud-starter-consul-discovery')
	compile('org.springframework.cloud:spring-cloud-starter-consul-config')
  compile('com.fasterxml.jackson.core:jackson-databind')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
	compile('com.fasterxml.jackson.core:jackson-annotations')
  compile('org.springframework.retry:spring-retry')
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.0.5.RELEASE'
	runtime('org.springframework.boot:spring-boot-devtools')
  errorprone 'com.google.errorprone:error_prone_core:2.2.0'
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
		options.compilerArgs += [ '-Xep:ParameterName:OFF' ]
}
